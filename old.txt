import winston, { loggers } from 'winston';
import fs from 'fs';
import path from 'path';
import DailyRotateFile from 'winston-daily-rotate-file';
import { environment, logDirectory } from '../config';
import dateFormat from 'dateformat'
import * as mm from '../config'
let dir = logDirectory;
if (!dir) dir = path.resolve('logs');

// create directory if it is not present
if (!fs.existsSync(dir)) {
  // Create the directory if it does not exist
  fs.mkdirSync(dir);
}
const levels = {
  error: 0,
  warn: 1,
  info: 2,
  http: 3,
  debug: 4,
}

const level = environment === 'development' ? 'debug' : 'warn'


const options = {
  file: {
    level,
    filename: dir + '/%DATE%.log',
    datePattern: 'YYYY-MM-DD',
    zippedArchive: true,
    timestamp: true,
    handleExceptions: true,
    humanReadableUnhandledException: true,
    prettyPrint: true,
    maxSize: '20m',
    colorize: true,
    maxFiles: '14d',
  },
}
const colors = {
  error: 'red',
  warn: 'yellow',
  info: 'cyan',
  http: 'magenta',
  debug: 'white',
}

winston.addColors(colors)

const format = winston.format.combine(
  winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),
  winston.format.colorize(),
  winston.format.splat(),
  winston.format.printf(
    info  => {
       return `${dateFormat(new Date(), "dddd, mmmm dS, yyyy, h:MM:ss TT")} [${info.level}]: ${info.message}`
    },
  ),
)

const transports = [
 new winston.transports.Console(),
  new DailyRotateFile(options.file),
]

const Logger = winston.createLogger({
  level,
  levels,
  format,
  transports,
})


export const morganLogger = winston.createLogger({
  level:'http',
  levels,
  format,
  transports: [
      new DailyRotateFile({
          filename: `${logDirectory}/http-%DATE%.log`,
          datePattern: 'YYYY-MM-DD',
          zippedArchive: true,
          maxSize: '20m',
          maxFiles: '14d'
      })   
   ],
  });


export default Logger
